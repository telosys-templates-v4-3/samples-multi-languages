#---------------------------------------------------------
# Templates bundle configuration file
# 5 values separated by ";"
# . value 1 : the label to be displayed 
# . value 2 : the file to be generated ( with variables replacement : ${ENT}, ${ENT_UC}, ${ENT_LC} )
# . value 3 : the project folder where to generate ( with variables replacement )
# . value 4 : the template to use
# . value 5 : number of execution : "1" for "ONCE" for all entities, default is multiple executions ( executed for each entity )
#---------------------------------------------------------

Java entity class (bean)  ; ${ENT}.java          ; examples/java ; java_bean.vm
Java basic cache service  ; ${ENT}Cache.java     ; examples/java ; java_bean_cache.vm
Java JUnit test / bean    ; ${ENT}Test.java      ; examples/java ; java_junit_bean.vm
Java JUnit test / cache   ; ${ENT}CacheTest.java ; examples/java ; java_junit_bean_cache.vm
Java Maven pom.xml        ; pom-generated.xml    ; examples/java ; pom_xml.vm                ; 1

Scala entity class        ; ${ENT}.scala         ; examples/scala  ; scala_entity_class.vm
Kotlin entity class       ; ${ENT}.kt            ; examples/kotlin ; kotlin_entity_class.vm

HTML doc for each entity  ; ${ENT}.html          ; examples/html   ; html_doc_entity.vm 
HTML doc index            ; index.html           ; examples/html   ; html_doc_index.vm ; 1

Python entity class       ; ${ENT}.py            ; examples/python ; python_entity_class.vm 
PHP7 entity class         ; ${ENT}.php           ; examples/php    ; php7_entity_class.vm 
C-Sharp entity class      ; ${ENT}.cs            ; examples/csharp ; csharp_entity_class.vm 
C++ entity class          ; ${ENT}.cpp           ; examples/cpp    ; cpp_entity_class.vm
